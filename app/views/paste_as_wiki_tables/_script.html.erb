<script type="text/javascript">
$(function() {
  $(document).on('paste', '.wiki-edit', function (e) {
    const $this = $(this);
    const clipboardData = e.clipboardData || e.originalEvent.clipboardData;
    if (!clipboardData) { return; }

    if (clipboardData.types.some(function(t){ return /^text\/plain$/.test(t); })) {
      const text = clipboardData.getData('text');

      if (isTable(text)) {
        insert($this, toTable(text));
        return false;
      }
      return true;
    } else if ($this.is('textarea[id^="journal_"]')) {
      const items = clipboardData.items;
      let file_upload = false
      $.event.addProp('dataTransfer');
      for (let i = 0 ; i < items.length ; i++) {
        const item = items[i];
        if (item.type.indexOf("image") !== -1) {
          const blob = item.getAsFile();
          const date = new Date();
          const filename = 'clipboard-'
            + date.getFullYear()
            + ('0' + (date.getMonth() + 1)).slice(-2)
            + ('0' + date.getDate()).slice(-2)
            + ('0' + date.getHours()).slice(-2)
            + ('0' + date.getMinutes()).slice(-2)
            + '-' + randomKey(5).toLocaleLowerCase()
            + '.' + blob.name.split('.').pop();
          const file = new Blob([blob], {type: blob.type});
          file.name = filename;
          const inputEl = $('input:file.filedrop').first();
          handleFileDropEvent.target = e.target;
          addFile(inputEl, file, true);
          file_upload = true
        }
      }
      if (file_upload === true) {
        const notesForm = $this.closest('form')
        const mainForm = document.getElementById('issue-form');
        notesForm.on('submit', function(event) {
          mainForm.submit();
        });
      }
    }
  });

  function insert(textarea, text) {
    var $textarea = $(textarea).focus();
    var currentText = $textarea.val();
    var startPoint = $textarea.get(0).selectionStart;
    var endPoint = startPoint + text.length;
    $textarea.val(currentText.substr(0, startPoint) + text + currentText.substr(endPoint));
    $textarea.get(0).setSelectionRange(endPoint, endPoint);
  }

  function isTable(text) {
    var lines = $.trim(text).split(/\r\n/);
    var length = lines.length;
    if (length < 2) {
      lines = $.trim(text).split(/\r|\n/);
      length = lines.length;
    }

    if (length < 2) {
      return false;
    }

    var cellCount = 0;
    for (var i = 0; i < length; i++) {
      var cells = lines[i].split('\t');
      if (cellCount == 0) {
        cellCount = cells.length;
      } else if (cellCount != cells.length) {
        return false
      }
    }
    return (cellCount > 1);
  }

  function toTable(text) {
    var tableText = "";
    var textFormatting = <%= raw ('"' + Setting.text_formatting + '"') %>;
    var lines = $.trim(text).split(/\r\n/);
    var linesLength = lines.length;
    if (linesLength < 2) {
      lines = $.trim(text).split(/\r|\n/);
      linesLength = lines.length;
    }
    if (linesLength == 0) {
      return text;
    }
    var firstLineCells = lines[0].split('\t');
    var firstLineCellsLength = firstLineCells.length;

    if (textFormatting == "markdown" || textFormatting == "common_mark") {
      tableText += "|";
      for (var i = 0; i < firstLineCellsLength; i++) {
        tableText += " " + firstLineCells[i] + " |";
      }
      tableText += "\n";
      tableText += "|";
      for (var i = 0; i < firstLineCellsLength; i++) {
        tableText += "---|";
      }
      tableText += "\n";
      for (var i = 1; i < linesLength; i++) {
        var cells = lines[i].split('\t');
        tableText += "| " + cells.join(" | ") + " |\n";
      }
      return tableText;
    } else if (textFormatting == "textile") {
      tableText += "|";
      for (var i = 0; i < firstLineCellsLength; i++) {
        tableText += "_." + firstLineCells[i] + "|";
      }
      tableText += "\n";
      for (var i = 1; i < linesLength; i++) {
        var cells = lines[i].split('\t');
        tableText += "|" + cells.join("|") + "|\n";
      }
      return tableText;
    } else {
      return text;
    }
  }
});
</script>
